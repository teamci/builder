#!/usr/bin/env bash

set -euo pipefail

main() {
	local output exit_code config_file

	output="$(mktemp)"
	config_file=/config/stylelint/config.json
	stylelint_pattern='\.(css|scss|less|sss)$'

	local -a args=("--formatter" "json" "--ignore-pattern" "**/*.min.css")

	echo '~~~ Building configuration options'
	if [ -f "${config_file}" ]; then
		echo 'INFO: using custom config.json'
		args+=("--config" "../${config_file}")

		if ! jq -re '.' "${config_file}" 2> "${output}" > /dev/null; then
			echo 'ERROR: custom config.json is not valid JSON'
			cat "${output}"
			return 1
		fi
	else
		echo 'INFO: no custom config.json found; using standard config.'
		args+=("--config" "../defaults/config.json")
	fi

	echo '~~~ Generating file list'
	if [ -f ".teamci_test_files" ]; then
		if grep -qE "${stylelint_pattern}" .teamci_test_files; then
			echo 'INFO: selecting files for stylelint'
			while read -r file; do
				args+=( "${file}" )
			done < <(grep -E "${stylelint_pattern}" .teamci_test_files)
		else
			echo 'INFO: no testable files in list; skipping'
			return 7
		fi
	else
		echo 'INFO: testing all possible files'
		args+=( "**/*.{css,scss,less,sss}"  )
	fi

	echo '~~~ Running stylelint'
	set +e
	stylelint "${args[@]}" > "${output}"
	exit_code=$?
	set -e

	if [ "$(jq -re '. | length' "${output}")" -eq 0 ]; then
		return 7
	fi

	tapify.rb < "${output}"

	if [ "${exit_code}" -eq 0 ]; then
		return 0
	else
		return 1
	fi
}

main "$@"
