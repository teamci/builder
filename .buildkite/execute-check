#!/usr/bin/env bash

set -euo pipefail

run_check() {
	if [ -z "${TEAMCI_CHECK_IMAGE:-}" ]; then
		echo "FATAL: Internal error. TEAMCI_CHECK_IMAGE missing. Please contact support."
		return 7
	fi

	touch logs/execution.log

	get_access_token 2>&1 | tee -a logs/execution.log
	sync_code 2>&1 | tee -a logs/execution.log

	echo "=> Pulling image" | tee -a logs/execution.log
	docker pull "${TEAMCI_CHECK_IMAGE}"  2>&1 | tee -a logs/execution.log

	local output_format

	output_format="$(docker inspect -f '{{ index .Config.Labels "com.teamci.output" }}' "${TEAMCI_CHECK_IMAGE}")"

	if [ -n "${output_format:-}" ]; then
		buildkite-agent meta-data set "teamci.output.${TEAMCI_CHECK_NAME}" "${output_format}"
	else
		buildkite-agent meta-data set "teamci.output.${TEAMCI_CHECK_NAME}" 'plain'
	fi

	echo "=> Executing check" | tee -a logs/execution.log

	local check_exit_code

	set +e
	docker run --rm \
		-v "${CODE_DIR}:/data/code:ro" \
		-v "${PWD}/logs/tap.log:/data/logs/tap.log" \
		--cpus 1 \
		--memory 512m \
		"${TEAMCI_CHECK_IMAGE}" 2>&1 | tee -a logs/execution.log
	check_exit_code=$?
	set -e

	return "${check_exit_code}"
}

main() {
	mkdir -p logs

	source .buildkite/hooks/pre-check

	run_check 2>&1 | tee -a logs/check.log
}

main "$@"
